#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FypWeb
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OnClickEvents")]
	public partial class VenuesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVenue(Venue instance);
    partial void UpdateVenue(Venue instance);
    partial void DeleteVenue(Venue instance);
    #endregion
		
		public VenuesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OnClickEventsConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VenuesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenuesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenuesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VenuesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Venue> Venues
		{
			get
			{
				return this.GetTable<Venue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venues")]
	public partial class Venue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VenueID;
		
		private string _Name;
		
		private string _Address;
		
		private string _NearestLocation;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<decimal> _Latitude;
		
		private long _Contact;
		
		private System.Nullable<int> _POBox;
		
		private int _Rating;
		
		private string _Picture;
		
		private string _VenueType;
		
		private string _Price;
		
		private System.Nullable<int> _PackageID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVenueIDChanging(int value);
    partial void OnVenueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNearestLocationChanging(string value);
    partial void OnNearestLocationChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnContactChanging(long value);
    partial void OnContactChanged();
    partial void OnPOBoxChanging(System.Nullable<int> value);
    partial void OnPOBoxChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnVenueTypeChanging(string value);
    partial void OnVenueTypeChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    #endregion
		
		public Venue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VenueID
		{
			get
			{
				return this._VenueID;
			}
			set
			{
				if ((this._VenueID != value))
				{
					this.OnVenueIDChanging(value);
					this.SendPropertyChanging();
					this._VenueID = value;
					this.SendPropertyChanged("VenueID");
					this.OnVenueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestLocation", DbType="VarChar(50)")]
		public string NearestLocation
		{
			get
			{
				return this._NearestLocation;
			}
			set
			{
				if ((this._NearestLocation != value))
				{
					this.OnNearestLocationChanging(value);
					this.SendPropertyChanging();
					this._NearestLocation = value;
					this.SendPropertyChanged("NearestLocation");
					this.OnNearestLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt NOT NULL")]
		public long Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POBox", DbType="Int")]
		public System.Nullable<int> POBox
		{
			get
			{
				return this._POBox;
			}
			set
			{
				if ((this._POBox != value))
				{
					this.OnPOBoxChanging(value);
					this.SendPropertyChanging();
					this._POBox = value;
					this.SendPropertyChanged("POBox");
					this.OnPOBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(MAX)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueType", DbType="VarChar(MAX)")]
		public string VenueType
		{
			get
			{
				return this._VenueType;
			}
			set
			{
				if ((this._VenueType != value))
				{
					this.OnVenueTypeChanging(value);
					this.SendPropertyChanging();
					this._VenueType = value;
					this.SendPropertyChanged("VenueType");
					this.OnVenueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(MAX)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
